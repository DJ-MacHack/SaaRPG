apply plugin: 'java'

group = 'de.unisaarland.sopra.group14'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8

jar {
    //Set the main class for this project
    manifest {
        attributes 'Main-Class': 'de.unisaarland.sopra.Main'
    }
    //Collect all dependencies and include them in the jar
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.test.output
}

// Enable verbose compiler warnings
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

repositories {
    mavenCentral()
    maven {
        credentials {
             username 'group14'
             password '5sR3F4kDm5PxVMaeZ5uYcnNT'
        }
        url 'https://sopra.cs.uni-saarland.de/repo/'
    }
}

dependencies {
    compile group: 'de.unisaarland.sopra', name: 'commlib', version: '+', changing: true
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
}

//Test coverage report
apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.7.201606060606"
    reportsDir = file("$buildDir/reports/coverage")
}
test.finalizedBy('jacocoTestReport')

//Findbugs configuration
apply plugin: 'findbugs'

findbugs {
    toolVersion = '3.0.1'
    effort = 'max'
    ignoreFailures = false
    reportsDir = file("$project.buildDir/reports/findbugs")
    includeFilter = file("$project.projectDir/config/findbugs.xml")
    excludeFilter = file("$project.projectDir/config/findbugs_exclude.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

//PMD configuration
apply plugin: 'pmd'

pmd {
    toolVersion = '5.5.1'
    ignoreFailures = false
    ruleSets = []
    ruleSetFiles = files("$project.projectDir/config/pmd.xml")
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

//Checkstyle configuration
apply plugin: 'checkstyle'

checkstyle {
    configFile = new File("$project.projectDir/config/checkstyle.xml")
    toolVersion = '7.1'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

//Task to generate dependencies for deployment
apply plugin: 'maven-publish'
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'core'
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}
publishing {
    repositories {
        maven {
            url System.getProperty('repo.path', "$buildDir/repo")
        }
    }
}

